fn main() {
	let input = "TTCTTGAATCTATTTGGGACCCAAATTCGGCGAAGAGGCAAGCTTCGGGGGTACCTCAAGGTCCGATGGACGATTCTTTATTGTAAAAGGGAGCAATAGCTCTCTGTAGCAAAAGTAAGAGTAGCGTCCGGATTACACATCGACGCTTAGTGAGTGGACGTGACAGAGCAGGTACGCCTGCTGGGCCCCGACTCACCGCTCTATAGCGCGGCTGCCGAAACCACAGCCGACCGGTTTGTCGCTACTATGTCTGGCAGCAAGATACCTAAGAACTACTTGTTATATGCGTGCAAATTCGAGCTCAGGAACGCACAGGACGTCCCTTGGTAATGCGTCCAGCTGTACACTGTAAGTCGGCATATCACTCTCACGCTAGATGGACCTGTACCGCTCTATGTGGGACTCTCGAATCAATACAATAATAATAATGTGACTTGGCTGTACGAGTGTTTTCCTCAGGAGCCGACACAAGAGGGCGCCGCACCCGTTCAAACAACTTGATCATTTCCTTGGTCACGCCCGAGTAACAAAGGTCAGTTGACCACTAGTAGGTGGTTTACACTTCTCATTGTGCACCGTACCCACCCGCCACTCCAGAGCACGACGCGCCTCTAACCCACCTTAATAGGTAGCGGCCAGGAGTGCTCGTGCCTTTTCATTCGAACACCAATATGATGCATAGAACACTGTATACTGTGGTAAACTCTTGGTGAGGGGGAGTGAGCAAGGTATCACGGCTTTAGCCAAGTCGGTGACGAAACATGATAAGGTACACGAGGTACAAGAGGACGGCGTCTATGCCATAGAATAATAGCTAAATGACGAGCACCACTGGCCTATCTATCAGCTGCAGAGCCACGTTACCCTTGGTACCGGGTTAAGGAGACAT";
	let mut complimented_input = String::new();
	for character in input.chars() {
		let compliment = get_compliment(character);
		complimented_input.push(compliment);
	}
	
	let result = reverse_string(complimented_input);
    println!("Result: {}", result);
}

fn get_compliment(value: char) -> char {
	match value {
		'A' => 'T',
		'T' => 'A',
		'C' => 'G',
		'G' => 'C',
		_ => value
	}
}

fn reverse_string(input: String) -> String {
	let length = input.len();
	let mut result = String::new();
	for i in range(0, length){
		let character = input.char_at(length - i - 1);
		result.push(character);
	}

	result
}
